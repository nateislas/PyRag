---
alwaysApply: true
---
# Hypothesis and Verification

1. Initial Assumption (Hypothesis): When a bug is reported, your first step is to form an educated guess about its root cause. This initial assumption should be based on the bug's symptoms, the context in which it occurred, and your general knowledge of the codebase. It's a starting point, not a conclusion.

2. Code Verification (Fact-Checking): Immediately after forming the hypothesis, you must actively search the codebase to prove or disprove it.

3. Locate the relevant code: Identify the specific files, functions, and lines of code that are most likely related to your hypothesis. Use your IDE's search function (e.g., Cmd+Shift+F on Mac or Ctrl+Shift+F on Windows) to find key variable names, function calls, or error messages.

4. Trace the logic: Step through the code's execution path in your mind (or with a debugger). Pay close attention to data flow, conditional statements, and potential edge cases. Look for places where your hypothesis might break down.

5. Consider alternative causes: If your initial hypothesis doesn't hold up under scrutiny, don't get stuck. While you're tracing the code, be open to finding other, more subtle bugs. It's common to find a different bug than the one you were initially looking for.